{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetchData = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    setData(null);\n    setError(null);\n    fetch(url).then(res => {\n      return res.json;\n    }).then(res => {\n      setData(res);\n      console.log(data);\n    }).catch(error => {\n      setIsLoading(false);\n      setError(\"Error\");\n    });\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n\n_s(useFetchData, \"zlA1wdceqG4DKBulpgi017sNZHA=\");\n\nexport default useFetchData;","map":{"version":3,"sources":["/Users/sangbongpark/Documents/GitHub/TakeHome/birdandbe/src/hook/useFetchData.js"],"names":["useState","useEffect","useFetchData","url","data","setData","isLoading","setIsLoading","error","setError","fetch","then","res","json","console","log","catch"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,YAAY,GAAIC,GAAD,IAAS;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEAC,IAAAA,KAAK,CAACP,GAAD,CAAL,CACKQ,IADL,CACWC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAX;AACH,KAHL,EAIKF,IAJL,CAIWC,GAAD,IAAS;AACXP,MAAAA,OAAO,CAACO,GAAD,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACH,KAPL,EAQKY,KARL,CAQYR,KAAD,IAAW;AACdD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,KAXL;AAYH,GAjBQ,EAiBN,CAACN,GAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,SAAR;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAzBD;;GAAMN,Y;;AA2BN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetchData = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setData(null);\r\n        setError(null);\r\n\r\n        fetch(url)\r\n            .then((res) => {\r\n                return res.json;\r\n            })\r\n            .then((res) => {\r\n                setData(res);\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false);\r\n                setError(\"Error\");\r\n            });\r\n    }, [url]);\r\n\r\n    return { data, isLoading, error };\r\n};\r\n\r\nexport default useFetchData;\r\n"]},"metadata":{},"sourceType":"module"}