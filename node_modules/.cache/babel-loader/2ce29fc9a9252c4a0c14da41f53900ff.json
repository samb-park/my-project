{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { add } from \"../module/addCart\";\nimport { Navigate } from \"react-router-dom\";\n\nconst useForm = (validate, product) => {\n  _s();\n\n  const [values, setValues] = useState({\n    customername: \"\",\n    allergies: \"\",\n    purchace: product.price\n  });\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    let {\n      name,\n      value,\n      id\n    } = event.target;\n\n    if (id === \"subscribe\") {\n      value = product.price - product.price * 0.1;\n    } else if (id === \"onetime\") {\n      value = product.price;\n    }\n\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const result = validate(values);\n\n    if (Object.keys(result).length === 0 && result.constructor === Object) {\n      dispatch(add({\n        id: product.id,\n        name: product.name,\n        price: values.purchace\n      }));\n    } else {\n      console.log(111);\n    }\n\n    setErrors(result);\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"ZfqMjDWmE9NJK6FakE1eVT0iOfs=\", false, function () {\n  return [useDispatch];\n});\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sangbongpark/Documents/GitHub/TakeHome/birdandbe/src/hook/useForm.js"],"names":["useState","useDispatch","add","Navigate","useForm","validate","product","values","setValues","customername","allergies","purchace","price","errors","setErrors","dispatch","handleChange","event","name","value","id","target","handleSubmit","preventDefault","result","Object","keys","length","constructor","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AACjCS,IAAAA,YAAY,EAAE,EADmB;AAEjCC,IAAAA,SAAS,EAAE,EAFsB;AAGjCC,IAAAA,QAAQ,EAAEL,OAAO,CAACM;AAHe,GAAD,CAApC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAsBH,KAAK,CAACI,MAAhC;;AAEA,QAAID,EAAE,KAAK,WAAX,EAAwB;AACpBD,MAAAA,KAAK,GAAGb,OAAO,CAACM,KAAR,GAAgBN,OAAO,CAACM,KAAR,GAAgB,GAAxC;AACH,KAFD,MAEO,IAAIQ,EAAE,KAAK,SAAX,EAAsB;AACzBD,MAAAA,KAAK,GAAGb,OAAO,CAACM,KAAhB;AACH;;AAEDJ,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACW,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAbD;;AAeA,QAAMG,YAAY,GAAIL,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,MAAM,GAAGnB,QAAQ,CAACE,MAAD,CAAvB;;AAEA,QAAIkB,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,KAA+B,CAA/B,IAAoCH,MAAM,CAACI,WAAP,KAAuBH,MAA/D,EAAuE;AACnEV,MAAAA,QAAQ,CACJb,GAAG,CAAC;AACAkB,QAAAA,EAAE,EAAEd,OAAO,CAACc,EADZ;AAEAF,QAAAA,IAAI,EAAEZ,OAAO,CAACY,IAFd;AAGAN,QAAAA,KAAK,EAAEL,MAAM,CAACI;AAHd,OAAD,CADC,CAAR;AAOH,KARD,MAQO;AACHkB,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACH;;AACDhB,IAAAA,SAAS,CAACU,MAAD,CAAT;AACH,GAhBD;;AAkBA,SAAO;AACHR,IAAAA,YADG;AAEHM,IAAAA,YAFG;AAGHf,IAAAA,MAHG;AAIHM,IAAAA;AAJG,GAAP;AAMH,CAhDD;;GAAMT,O;UAOeH,W;;;AA2CrB,eAAeG,OAAf","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { add } from \"../module/addCart\";\nimport { Navigate } from \"react-router-dom\";\n\nconst useForm = (validate, product) => {\n    const [values, setValues] = useState({\n        customername: \"\",\n        allergies: \"\",\n        purchace: product.price,\n    });\n    const [errors, setErrors] = useState({});\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        let { name, value, id } = event.target;\n\n        if (id === \"subscribe\") {\n            value = product.price - product.price * 0.1;\n        } else if (id === \"onetime\") {\n            value = product.price;\n        }\n\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const result = validate(values);\n\n        if (Object.keys(result).length === 0 && result.constructor === Object) {\n            dispatch(\n                add({\n                    id: product.id,\n                    name: product.name,\n                    price: values.purchace,\n                })\n            );\n        } else {\n            console.log(111);\n        }\n        setErrors(result);\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n    };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}