{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst useForm = () => {\n  _s();\n\n  //Form values\n  const [values, setValues] = useState({\n    name: ''\n  }); //Errors\n\n  const [errors, setErrors] = useState({}); //A method to handle form inputs\n\n  const handleChange = event => {\n    //To stop default events    \n    event.persist();\n    let name = event.target.name;\n    let val = event.target.value; //Let's set these values in state\n\n    setValues({ ...values,\n      [name]: val\n    });\n  };\n\n  return {\n    values,\n    errors,\n    handleChange\n  };\n};\n\n_s(useForm, \"hJ5DwBPu5KwQDYN9gKDWsnzt8Hg=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sangbongpark/Documents/GitHub/TakeHome/birdandbe/src/hook/useForm.js"],"names":["React","useState","useForm","values","setValues","name","errors","setErrors","handleChange","event","persist","target","val","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC;AACjCI,IAAAA,IAAI,EAAC;AAD4B,GAAD,CAApC,CAHkB,CAMlB;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CAPkB,CAUpB;;AACE,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACAA,IAAAA,KAAK,CAACC,OAAN;AAEA,QAAIL,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaN,IAAxB;AACA,QAAIO,GAAG,GAAGH,KAAK,CAACE,MAAN,CAAaE,KAAvB,CAL4B,CAO5B;;AACAT,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACE,IAAD,GAAOO;AAFD,KAAD,CAAT;AAKH,GAbD;;AAgBA,SAAO;AACHT,IAAAA,MADG;AAEHG,IAAAA,MAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CAhCD;;GAAMN,O;;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst useForm = () => {\n    \n    //Form values\n    const [values, setValues] = useState({\n        name:''\n    });\n    //Errors\n    const [errors, setErrors] = useState({});\n\n\n  //A method to handle form inputs\n    const handleChange = (event) => {\n        //To stop default events    \n        event.persist();\n\n        let name = event.target.name;\n        let val = event.target.value;\n\n        //Let's set these values in state\n        setValues({\n            ...values,\n            [name]:val,\n        })\n\n    }\n\n\n    return {\n        values,\n        errors,\n        handleChange,\n    }\n}\n\nexport default useForm"]},"metadata":{},"sourceType":"module"}