{"ast":null,"code":"import { createStore, combineReducers } from \"redux\";\nconst headerState = {\n  menu: \"Shop\",\n  name: \"Shop\",\n  description: \"Vitamins & Supplements\",\n  price: null\n};\nconst cartState = [{}];\n\nconst updateHeader = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : headerState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"Header\") {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst addCartData = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cartState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (state.type === \"Add\") {}\n\n  return state;\n};\n\nconst store = createStore(combineReducers({\n  updateHeader,\n  addCartData\n}));\nexport default store;","map":{"version":3,"sources":["/Users/sangbongpark/Documents/GitHub/TakeHome/birdandbe/src/store/index.js"],"names":["createStore","combineReducers","headerState","menu","name","description","price","cartState","updateHeader","state","action","type","payload","addCartData","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,MADU;AAEhBC,EAAAA,IAAI,EAAE,MAFU;AAGhBC,EAAAA,WAAW,EAAE,wBAHG;AAIhBC,EAAAA,KAAK,EAAE;AAJS,CAApB;AAOA,MAAMC,SAAS,GAAG,CAAC,EAAD,CAAlB;;AAEA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBP,WAAwB;AAAA,MAAXQ,MAAW;;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,KAAP;AACH,CALD;;AAOA,MAAMI,WAAW,GAAG,YAA+B;AAAA,MAA9BJ,KAA8B,uEAAtBF,SAAsB;AAAA,MAAXG,MAAW;;AAC/C,MAAID,KAAK,CAACE,IAAN,KAAe,KAAnB,EAA0B,CACzB;;AACD,SAAOF,KAAP;AACH,CAJD;;AAMA,MAAMK,KAAK,GAAGd,WAAW,CAACC,eAAe,CAAC;AAAEO,EAAAA,YAAF;AAAgBK,EAAAA;AAAhB,CAAD,CAAhB,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers } from \"redux\";\n\nconst headerState = {\n    menu: \"Shop\",\n    name: \"Shop\",\n    description: \"Vitamins & Supplements\",\n    price: null,\n};\n\nconst cartState = [{}];\n\nconst updateHeader = (state = headerState, action) => {\n    if (action.type === \"Header\") {\n        return action.payload;\n    }\n    return state;\n};\n\nconst addCartData = (state = cartState, action) => {\n    if (state.type === \"Add\") {\n    }\n    return state;\n};\n\nconst store = createStore(combineReducers({ updateHeader, addCartData }));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}