{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst useForm = (validate, initPrice) => {\n  _s();\n\n  const [values, setValues] = useState({\n    customername: \"\",\n    allergies: \"\",\n    purchace: initPrice\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = event => {\n    let {\n      name,\n      value,\n      id\n    } = event.target;\n\n    if (id === \"subscribe\") {\n      value = initPrice - initPrice * 0.1;\n    } else if (id === \"onetime\") {\n      value = initPrice;\n    }\n\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const result = validate(values);\n\n    if (Object.keys(result).length === 0 && result.constructor === Object) {\n      console.log(values);\n    } else {\n      setErrors(result);\n    }\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors\n  };\n};\n\n_s(useForm, \"IENaUcrnnugICgPvAHkSNRCT4yo=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/sangbongpark/Documents/GitHub/TakeHome/birdandbe/src/hook/useForm.js"],"names":["useState","useDispatch","useForm","validate","initPrice","values","setValues","customername","allergies","purchace","errors","setErrors","handleChange","event","name","value","id","target","handleSubmit","preventDefault","result","Object","keys","length","constructor","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACjCO,IAAAA,YAAY,EAAE,EADmB;AAEjCC,IAAAA,SAAS,EAAE,EAFsB;AAGjCC,IAAAA,QAAQ,EAAEL;AAHuB,GAAD,CAApC;AAKA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAAsBH,KAAK,CAACI,MAAhC;;AAEA,QAAID,EAAE,KAAK,WAAX,EAAwB;AACpBD,MAAAA,KAAK,GAAGX,SAAS,GAAGA,SAAS,GAAG,GAAhC;AACH,KAFD,MAEO,IAAIY,EAAE,KAAK,SAAX,EAAsB;AACzBD,MAAAA,KAAK,GAAGX,SAAR;AACH;;AAEDE,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACS,IAAD,GAAQC;AAFF,KAAD,CAAT;AAIH,GAbD;;AAeA,QAAMG,YAAY,GAAIL,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,MAAM,GAAGjB,QAAQ,CAACE,MAAD,CAAvB;;AAEA,QAAIgB,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,KAA+B,CAA/B,IAAoCH,MAAM,CAACI,WAAP,KAAuBH,MAA/D,EAAuE;AACnEI,MAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AACH,KAFD,MAEO;AACHM,MAAAA,SAAS,CAACS,MAAD,CAAT;AACH;AACJ,GATD;;AAWA,SAAO;AACHR,IAAAA,YADG;AAEHM,IAAAA,YAFG;AAGHb,IAAAA,MAHG;AAIHK,IAAAA;AAJG,GAAP;AAMH,CAxCD;;GAAMR,O;;AA0CN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\nconst useForm = (validate, initPrice) => {\n    const [values, setValues] = useState({\n        customername: \"\",\n        allergies: \"\",\n        purchace: initPrice,\n    });\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (event) => {\n        let { name, value, id } = event.target;\n\n        if (id === \"subscribe\") {\n            value = initPrice - initPrice * 0.1;\n        } else if (id === \"onetime\") {\n            value = initPrice;\n        }\n\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const result = validate(values);\n\n        if (Object.keys(result).length === 0 && result.constructor === Object) {\n            console.log(values);\n        } else {\n            setErrors(result);\n        }\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n    };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}